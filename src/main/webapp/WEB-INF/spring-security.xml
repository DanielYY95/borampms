<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

	<sec:http use-expressions="true">
		<sec:intercept-url pattern="/admin/**" 
		                   access="hasAuthority('ROLE_ADMIN')" />
	
		<sec:form-login 
			login-page="/adminLoginform" 
			login-processing-url="/user/login"
			username-parameter="adminId"
			password-parameter="adminPw"
			default-target-url="/admin"
			authentication-failure-url="/adminLoginform?error=true"		
		
		/><!-- login-page 은 로그인화면
			   login-processing-url 로그인 처리
				default-target-url은 성공 후 이동할 공간  
		
		 -->
		<sec:logout logout-url="/user/logout" />
	</sec:http>
	<bean id="customUserDetailsService"
		class="security.custom.CustomUserDetailsService" /> <!-- DAO 지원한다. -->

	<bean id="customAuthenticationProvider"
		class="security.custom2.CustomAuthenticationProvider" />
			
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<sec:authentication-manager>
	
		<!--DB로 처리시 --> 
		<sec:authentication-provider ref="customAuthenticationProvider" />

		<sec:authentication-provider
			user-service-ref="customUserDetailsService" />

		<sec:authentication-provider>
			<sec:jdbc-user-service data-source-ref="dataSource"
				id="jdbcUserService" />
			<!--
			<sec:password-encoder ref="passwordEncoder" />
			-->
		</sec:authentication-provider>		
	</sec:authentication-manager>
</beans>